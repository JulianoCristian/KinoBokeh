#define SAMPLE_COUNT_HIGHER

#if defined(SAMPLE_COUNT_HIGH)

static const int kSampleCount = 43;
static const float2 kDiscKernel[kSampleCount] = {
    float2(0,0),
    float2(0.25,0),
    float2(0.15587245,0.19545788),
    float2(-0.055630237,0.24373198),
    float2(-0.22524221,0.108470954),
    float2(-0.22524221,-0.10847094),
    float2(-0.055630136,-0.243732),
    float2(0.15587242,-0.1954579),
    float2(0.5,0),
    float2(0.45048442,0.21694188),
    float2(0.3117449,0.39091575),
    float2(0.11126049,0.48746395),
    float2(-0.111260474,0.48746395),
    float2(-0.311745,0.3909157),
    float2(-0.45048442,0.21694191),
    float2(-0.5,-0.00000004371139),
    float2(-0.45048442,-0.21694188),
    float2(-0.3117448,-0.3909158),
    float2(-0.11126027,-0.487464),
    float2(0.11126075,-0.4874639),
    float2(0.31174484,-0.3909158),
    float2(0.45048442,-0.21694188),
    float2(0.75,0),
    float2(0.7166796,0.22106639),
    float2(0.6196791,0.42249006),
    float2(0.46761733,0.5863736),
    float2(0.27400574,0.6981553),
    float2(0.0560475,0.74790287),
    float2(-0.16689071,0.7311959),
    float2(-0.37500006,0.649519),
    float2(-0.54978895,0.5101295),
    float2(-0.67572665,0.32541287),
    float2(-0.74162316,0.11178157),
    float2(-0.7416231,-0.111781865),
    float2(-0.67572665,-0.3254128),
    float2(-0.5497889,-0.5101296),
    float2(-0.37499994,-0.6495191),
    float2(-0.16689076,-0.7311959),
    float2(0.05604772,-0.7479028),
    float2(0.27400613,-0.69815516),
    float2(0.46761727,-0.5863737),
    float2(0.6196791,-0.42249),
    float2(0.7166797,-0.22106612),
};

#endif

#if defined(SAMPLE_COUNT_HIGHER)

static const int kSampleCount = 61;
static const float2 kDiscKernel[kSampleCount] = {
    float2(0,0),
    float2(0.2,0),
    float2(0.099999994,0.17320509),
    float2(-0.10000002,0.17320508),
    float2(-0.2,-0.000000017484556),
    float2(-0.09999999,-0.17320509),
    float2(0.100000076,-0.17320505),
    float2(0.4,0),
    float2(0.34641016,0.2),
    float2(0.19999999,0.34641019),
    float2(-0.000000017484556,0.4),
    float2(-0.20000003,0.34641016),
    float2(-0.3464102,0.19999993),
    float2(-0.4,-0.000000034969112),
    float2(-0.34641013,-0.20000008),
    float2(-0.19999997,-0.34641019),
    float2(0.0000000047699524,-0.4),
    float2(0.20000015,-0.3464101),
    float2(0.34641024,-0.19999991),
    float2(0.6,0),
    float2(0.5638156,0.2052121),
    float2(0.45962667,0.3856726),
    float2(0.29999998,0.5196153),
    float2(0.10418887,0.5908847),
    float2(-0.104188986,0.5908847),
    float2(-0.30000004,0.51961523),
    float2(-0.4596268,0.38567248),
    float2(-0.56381565,0.20521201),
    float2(-0.6,-0.000000052453668),
    float2(-0.56381553,-0.20521225),
    float2(-0.45962662,-0.38567266),
    float2(-0.29999995,-0.5196153),
    float2(-0.10418888,-0.5908847),
    float2(0.10418918,-0.5908846),
    float2(0.29999995,-0.5196153),
    float2(0.4596268,-0.38567245),
    float2(0.56381565,-0.20521195),
    float2(0.8,0),
    float2(0.77274066,0.20705524),
    float2(0.6928203,0.4),
    float2(0.56568545,0.56568545),
    float2(0.39999998,0.69282037),
    float2(0.20705517,0.7727407),
    float2(-0.000000034969112,0.8),
    float2(-0.20705533,0.77274066),
    float2(-0.40000007,0.6928203),
    float2(-0.56568545,0.56568545),
    float2(-0.6928204,0.39999986),
    float2(-0.7727407,0.20705514),
    float2(-0.8,-0.000000069938224),
    float2(-0.77274066,-0.20705526),
    float2(-0.69282025,-0.40000015),
    float2(-0.56568545,-0.5656854),
    float2(-0.39999995,-0.69282037),
    float2(-0.2070552,-0.7727407),
    float2(0.000000009539905,-0.8),
    float2(0.20705521,-0.77274066),
    float2(0.4000003,-0.6928202),
    float2(0.56568563,-0.5656852),
    float2(0.6928205,-0.39999983),
    float2(0.7727406,-0.20705543),
};

#endif
